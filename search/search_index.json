{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"LebryDB","text":"<p>A classe LebryDB \u00e9 uma implementa\u00e7\u00e3o simples de um banco de dados NoSQL baseado em dicion\u00e1rio em Python. Ela permite armazenar e consultar documentos JSON em cole\u00e7\u00f5es.</p>"},{"location":"#metodos-da-classe","title":"M\u00e9todos da Classe","text":""},{"location":"#__init__self","title":"<code>__init__(self)</code>","text":"<p>Descri\u00e7\u00e3o: Inicializa uma inst\u00e2ncia da classe LebryDB.</p>"},{"location":"#insertself-collection-document","title":"<code>insert(self, collection, document)</code>","text":"<p>Descri\u00e7\u00e3o: Insere um documento em uma cole\u00e7\u00e3o.</p> <ul> <li><code>collection</code> (str): O nome da cole\u00e7\u00e3o em que o documento ser\u00e1 inserido.</li> <li><code>document</code> (dict): O documento JSON a ser inserido na cole\u00e7\u00e3o.</li> </ul>"},{"location":"#findself-collection-querynone","title":"<code>find(self, collection, query=None)</code>","text":"<p>Descri\u00e7\u00e3o: Consulta documentos em uma cole\u00e7\u00e3o.</p> <ul> <li><code>collection</code> (str): O nome da cole\u00e7\u00e3o a ser consultada.</li> <li><code>query</code> (dict, opcional): Um dicion\u00e1rio que define crit\u00e9rios de consulta. Se n\u00e3o fornecido, todos os documentos da cole\u00e7\u00e3o ser\u00e3o retornados.</li> </ul> <p>Retorno: Uma lista de documentos que correspondem aos crit\u00e9rios da consulta.</p>"},{"location":"#updateself-collection-query-new_values","title":"<code>update(self, collection, query, new_values)</code>","text":"<p>Descri\u00e7\u00e3o: Atualiza documentos em uma cole\u00e7\u00e3o que correspondem a uma consulta.</p> <ul> <li><code>collection</code> (str): O nome da cole\u00e7\u00e3o a ser atualizada.</li> <li><code>query</code> (dict): Um dicion\u00e1rio que define os crit\u00e9rios para selecionar os documentos a serem atualizados.</li> <li><code>new_values</code> (dict): Um dicion\u00e1rio contendo os novos valores para atualizar os documentos correspondentes.</li> </ul>"},{"location":"#removeself-collection-query","title":"<code>remove(self, collection, query)</code>","text":"<p>Descri\u00e7\u00e3o: Remove documentos de uma cole\u00e7\u00e3o que correspondem a uma consulta.</p> <ul> <li><code>collection</code> (str): O nome da cole\u00e7\u00e3o a ser atualizada.</li> <li><code>query</code> (dict): Um dicion\u00e1rio que define os crit\u00e9rios para selecionar os documentos a serem removidos.</li> </ul>"},{"location":"#exemplo-de-uso","title":"Exemplo de Uso","text":"<pre><code># Cria uma inst\u00e2ncia do LebryDB\ndb = LebryDB()\n\n# Insere um documento em uma cole\u00e7\u00e3o\ndb.insert('users', {'name': 'Alice', 'age': 30})\n\n# Consulta documentos em uma cole\u00e7\u00e3o\nresults = db.find('users', {'name': 'Alice'})\nprint(results)  # [{'name': 'Alice', 'age': 30}]\n\n# Atualiza documentos em uma cole\u00e7\u00e3o\ndb.update('users', {'name': 'Alice'}, {'age': 31})\n\n# Remove documentos em uma cole\u00e7\u00e3o\ndb.remove('users', {'name': 'Alice'})\n\n# Consulta novamente ap\u00f3s a remo\u00e7\u00e3o\nresults = db.find('users', {'name': 'Alice'})\nprint(results)  # []\n</code></pre>"}]}